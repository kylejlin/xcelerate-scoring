rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
    	allow read: if true;
      allow create, update: if userId == request.auth.uid && isValidUserShape();
    }

    function isValidUserShape() {
      return request.resource.data.firstName is string
        && request.resource.data.lastName is string
        && request.resource.data.size() == 2;
    }
    
    match /seasons/{seasonId} {
    	allow read: if true;
      allow update: if userHasWriteAccess()
        && (
          isUnchanged('ownerId')
          && request.resource.data.assistantIds is list
          && !(resource.data.ownerId in request.resource.data.assistantIds)
          && isUnchanged('name')
          && isUnchanged('minGrade')
          && isUnchanged('maxGrade')
          && isUnchanged('schools')
          && request.resource.data.size() == resource.data.size()
        )
        && (
          resource.data.ownerId == request.auth.uid
          || (
            request.resource.data.assistantIds.hasAll(resource.data.assistantIds)
          )
        );
      
      function season() {
        return get(/databases/$(database)/documents/seasons/$(seasonId)).data;
      }
      
      function userHasWriteAccess() {
        return season().ownerId == request.auth.uid
          || (request.auth.uid in season().assistantIds);
      }

      function isUnchanged(key) {
        return request.resource.data[key] == resource.data[key];
      }
      
      match /meets/{meetId} {
      	allow read: if true; 
      }
    }

    match /seasonAthleteAggregates/{seasonId} {
      allow read: if true;
    }
  }
}